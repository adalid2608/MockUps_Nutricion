# Generated by Django 5.0.1 on 2024-04-17 04:20
from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0001_initial'),
    ]

    operations = [
        migrations.RunSQL(
            '''
            DROP TRIGGER IF EXISTS dietas_AFTER_INSERT;
            DROP TRIGGER IF EXISTS dietas_AFTER_UPDATE;
            DROP TRIGGER IF EXISTS dietas_AFTER_DELETE;
            DROP TRIGGER IF EXISTS dietas_usuarios_AFTER_INSERT;
            DROP TRIGGER IF EXISTS dietas_usuarios_AFTER_UPDATE;
            DROP TRIGGER IF EXISTS dietas_usuarios_AFTER_DELETE;
            DROP TRIGGER IF EXISTS indicadores_nutricionales_AFTER_INSERT;
            DROP TRIGGER IF EXISTS indicadores_nutricionales_AFTER_UPDATE;
            DROP TRIGGER IF EXISTS indicadores_nutricionales_AFTER_DELETE;
            DROP TRIGGER IF EXISTS seguimientos_dietas_usuarios_AFTER_INSERT;
            DROP TRIGGER IF EXISTS seguimientos_dietas_usuarios_AFTER_UPDATE;
            DROP TRIGGER IF EXISTS seguimientos_dietas_usuarios_AFTER_DELETE;
            DROP TRIGGER IF EXISTS valoraciones_nutricionales_AFTER_INSERT;
            DROP TRIGGER IF EXISTS valoraciones_nutricionales_AFTER_UPDATE;
            DROP TRIGGER IF EXISTS valoraciones_nutricionales_AFTER_DELETE;
            DROP TRIGGER IF EXISTS preguntas_nutricionales_AFTER_INSERT;
            DROP TRIGGER IF EXISTS preguntas_nutricionales_AFTER_UPDATE;
            DROP TRIGGER IF EXISTS preguntas_nutricionales_AFTER_DELETE;
            '''
        ),

     migrations.RunSQL('''
    CREATE DEFINER=root@localhost TRIGGER dietas_AFTER_INSERT AFTER INSERT ON dietas FOR EACH ROW BEGIN
	-- Declaración de variables
    DECLARE v_cadena_estatus varchar(15) default null;
    
    -- Iniciación de las variables
    IF new.estatus = b'1' then
        set v_cadena_estatus = "Activa";
    else
        set v_cadena_estatus = "Inactiva";
    end if;
    
	INSERT INTO bitacora VALUES(
		DEFAULT,
        USER(),
        "Create",
        "dietas",
        CONCAT_WS(" ","Se ha insertado una nueva DIETA con el ID: ",NEW.ID, 
        "con los siguientes datos: NOMBRE=", NEW.nombre,
        "DESCRIPCION = ", NEW.descripcion,
        "OBJETIVO = ", NEW.objetivo, 
        "RESTRICCIONES = ", NEW.restricciones,
        "ESTATUS = ", v_cadena_estatus),
        NOW(),
        TRUE
    );
END
'''),


    migrations.RunSQL('''
    CREATE DEFINER=root@localhost TRIGGER dietas_AFTER_UPDATE AFTER UPDATE ON dietas FOR EACH ROW BEGIN
	 -- Declaración de variables
    DECLARE v_cadena_estatus VARCHAR(15) DEFAULT NULL;
    DECLARE v_cadena_estatus2 VARCHAR(15) DEFAULT NULL;
    
	IF NEW.estatus = b'1' THEN
		SET v_cadena_estatus= "Activa";
    ELSE
		SET v_cadena_estatus= "Inactiva";
    END IF; 
    
    IF OLD.estatus = b'1' THEN
		SET v_cadena_estatus2= "Activa";
    ELSE
		SET v_cadena_estatus2= "Inactiva";
    END IF; 
	
    INSERT INTO bitacora VALUES(
        DEFAULT,
        USER(),
        "Update",
        "dietas",
        CONCAT_WS(" ","Se han actualizado los datos de la DIETA con el ID:",NEW.ID,
        "con los siguientes datos: ",
        "NOMBRE = ", OLD.nombre, " cambio a ", NEW.nombre,
        "DESCRIPCION = ", OLD.descripcion,"cambio a ", NEW.descripcion,
        "OBJETIVO = ", OLD.objetivo," cambio a", NEW.objetivo,
        "RESCRICCIONES = ", OLD.restricciones," cambio a ", NEW.restricciones,
        "ESTATUS = ", v_cadena_estatus2, " cambio a ", v_cadena_estatus),
        NOW(),
        DEFAULT       
    );
END

'''),

    migrations.RunSQL('''
    CREATE DEFINER=root@localhost TRIGGER dietas_AFTER_DELETE AFTER DELETE ON dietas FOR EACH ROW BEGIN
	INSERT INTO bitacora VALUES(
		DEFAULT,
        USER(),
        "Delete",
        "dietas",
        CONCAT_WS(" ","Se ha eliminado una DIETA con el ID: ", OLD.ID),
        now(),
        DEFAULT
    );
END

'''),

    migrations.RunSQL('''
    CREATE DEFINER=root@localhost TRIGGER dietas_usuarios_AFTER_INSERT AFTER INSERT ON dietas_usuarios FOR EACH ROW BEGIN
	-- Declaración de variables
    DECLARE v_cadena_estatus varchar(15) default null;
    DECLARE v_nombre_usuario varchar(60) default null;

    -- Iniciación de las variables
    IF new.estatus = b'1' then
        set v_cadena_estatus = "Activa";
    else
        set v_cadena_estatus = "Inactiva";
    end if;

    if new.usuario_id is not null then
        -- En caso de tener el id del empleado responsable debemos recuperar su nombre
        set v_nombre_usuario = (SELECT CONCAT_WS(" ", p.titulo_cortesia, p.nombre, p.primer_apellido, p.segundo_Apellido) FROM personas p WHERE id = NEW.usuario_id);
    else
        SET v_nombre_usuario = "Sin usuario asignado";
    end if;

    -- Insertar en la bitacora
    INSERT INTO bitacora VALUES(
        DEFAULT,
        USER(),
        "Create",
        "dietas_usuarios",
        CONCAT_WS(" ","Se ha insertado una nueva relación DIETA USUARIO con el ID: ",NEW.ID, 
        "con los siguientes datos: ",
        "USUARIO ID = ", v_nombre_usuario,
        "DIETA ID = ", NEw.dieta_id,
        "FECHA DE ASIGNACIÓN = ", new.fecha_asignacion,
        "SUCURSFECHA DE INICIOAL ID = ", new.fecha_inicio,
        "FECHA FIN = ", NEW.fecha_fin, 
		"OBSERVACIONES = ", new.observaciones,
        "ESTATUS = ", v_cadena_estatus),
        NOW(),
        DEFAULT
    );
END  

'''),

    migrations.RunSQL('''
    CREATE DEFINER=root@localhost TRIGGER dietas_usuarios_AFTER_UPDATE AFTER UPDATE ON dietas_usuarios FOR EACH ROW BEGIN
	 -- Declaración de variables
    DECLARE v_cadena_estatus VARCHAR(15) DEFAULT NULL;
    DECLARE v_cadena_estatus2 VARCHAR(15) DEFAULT NULL;
	DECLARE v_nombre_usuario varchar(60) default null;
	DECLARE v_nombre_usuario2 varchar(60) default null;
    DECLARE v_nombre_dieta varchar(60) default null;
    DECLARE v_nombre_dieta2 varchar(60) default null;
    
	IF NEW.estatus = b'1' THEN
		SET v_cadena_estatus= "Activa";
    ELSE
		SET v_cadena_estatus= "Inactiva";
    END IF; 
    
    IF OLD.estatus = b'1' THEN
		SET v_cadena_estatus2= "Activa";
    ELSE
		SET v_cadena_estatus2= "Inactiva";
    END IF; 
    
    
    if new.usuario_id is not null then
        set v_nombre_usuario = (SELECT CONCAT_WS(" ", p.titulo_cortesia, p.nombre, p.primer_apellido, p.segundo_Apellido) FROM personas p WHERE id = NEW.usuario_id);
    else
        SET v_nombre_usuario = "Sin usuario asignado";
    end if;
    
    if old.usuario_id is not null then
        set v_nombre_usuario2 = (SELECT CONCAT_WS(" ", p.titulo_cortesia, p.nombre, p.primer_apellido, p.segundo_Apellido) FROM personas p WHERE id = old.usuario_id);
    else
        SET v_nombre_usuario2 = "Sin usuario asignado";
    end if;
	
    if new.usuario_id is not null then
        set v_nombre_dieta = (SELECT CONCAT_WS(" ", p.titulo_cortesia, p.nombre, p.primer_apellido, p.segundo_Apellido) FROM personas p WHERE id = NEW.dieta_id);
    else
        SET v_nombre_dieta = "Sin dieta asignado";
    end if;
      if new.usuario_id is not null then
        set v_nombre_dieta2 = (SELECT CONCAT_WS(" ", p.titulo_cortesia, p.nombre, p.primer_apellido, p.segundo_Apellido) FROM personas p WHERE id = NEW.dieta_id);
    else
        SET v_nombre_dieta2 = "Sin dieta asignado";
    end if;
    
    INSERT INTO bitacora VALUES(
        DEFAULT,
        USER(),
        "Update",
        "dietas",
        CONCAT_WS(" ","Se han actualizado los datos de la DIETA con el ID:",NEW.ID,
        "con los siguientes datos: ",
        "USUARIO_ID = ", v_nombre_usuario2, "cambio a ", v_nombre_usuario,
        "DIETA_ID = " , OLD.dieta_id, "cambio a ", NEW.dieta_id,
        "FECHA_ASIGNACION = ", OLD.fecha_asignacion, "cambio a ", NEW.fecha_asignacion,
        "FECHA_INICIO = ", OLD.fecha_inicio,"cambio a ", NEW.fecha_inicio,
        "FECHA_FIN = ", OLD.fecha_fin," cambio a", NEW.fecha_fin,
        "OBSERVACIONES = ", OLD.observaciones," cambio a ", NEW.observaciones,
        "ESTATUS = ", v_cadena_estatus2, " cambio a ", v_cadena_estatus),
        NOW(),
        DEFAULT       
    );
END

'''),

    migrations.RunSQL('''
    CREATE DEFINER=root@localhost TRIGGER dietas_usuarios_AFTER_DELETE AFTER DELETE ON dietas_usuarios FOR EACH ROW BEGIN
	INSERT INTO bitacora VALUES(
		DEFAULT,
        USER(),
        "Delete",
        "dietas_usuarios",
        CONCAT_WS(" ","Se ha eliminado la relación DIETA_USUARIO con el ID: ", OLD.ID),
        now(),
        DEFAULT
    );
END

'''),

    migrations.RunSQL('''
    CREATE DEFINER=root@localhost TRIGGER indicadores_nutricionales_AFTER_INSERT AFTER INSERT ON indicadores_nutricionales FOR EACH ROW BEGIN
	-- Insertar en la bitacora
    INSERT INTO bitacora VALUES(
        DEFAULT,
        USER(),
        "Create",
        "indicadores_nutricionales",
        CONCAT_WS(" ","Se ha insertado un nuevo INDICADOR NUTRICIONAL con el ID: ",NEW.ID, 
        "con los siguientes datos: ",
        "EDAD = ", NEW.edad,
        "IMC = ", NEW.imc,
        "CIRCUNFERENCIA DE CINTURA = ", NEW.circunferencia_cintura, 
        "NIVEL DE NUTRIENTES EN LA SANGRE = ", NEW.nivel_nutriente_sangre),
        NOW(),
        DEFAULT
    );
END

'''),

    migrations.RunSQL('''
    CREATE DEFINER=root@localhost TRIGGER indicadores_nutricionales_AFTER_UPDATE AFTER UPDATE ON indicadores_nutricionales FOR EACH ROW BEGIN
	INSERT INTO bitacora VALUES(
        DEFAULT,
        USER(),
        "Update",
        "indicadores_nutricionales",
        CONCAT_WS(" ","Se han actualizado los datos del INDICADOR NUTRICIONAL con el ID: ",
        NEW.ID, "con los siguientes datos:",
        "EDAD = ", OLD.edad, " cambio a ", NEW.edad,
        "IMC = ", OLD.imc, " cambio a ", NEW.imc,
        "CIRCUNFERENCIA DE CINTURA = ", OLD.circunferencia_cintura, " cambio a ", NEW.circunferencia_cintura,
        "NIVEL DE NUTRIENTES EN LA SANGRE = ", OLD.nivel_nutriente_sangre, " cambio a ", NEW.nivel_nutriente_sangre),
        NOW(),
        DEFAULT       
    );
END

'''),

    migrations.RunSQL('''
    CREATE DEFINER=root@localhost TRIGGER indicadores_nutricionales_AFTER_DELETE AFTER DELETE ON indicadores_nutricionales FOR EACH ROW BEGIN
	INSERT INTO bitacora VALUES(
		DEFAULT,
        USER(),
        "Delete",
        "indicadores_nutricionales",
        CONCAT_WS(" ","Se ha eliminado el INDICADOR NUTRICIONAL con el ID: ", OLD.ID),
        now(),
        DEFAULT
    );
END

'''),

    migrations.RunSQL('''
    CREATE DEFINER=root@localhost TRIGGER seguimientos_dietas_usuarios_AFTER_INSERT AFTER INSERT ON seguimientos_dietas_usuarios FOR EACH ROW BEGIN
	-- Declaración de variables
    DECLARE v_nombre_empleado varchar(60) default null;
    

    if new.empleado_id is not null then
        -- En caso de tener el id del empleado responsable debemos recuperar su nombre
        set v_nombre_empleado = (SELECT CONCAT_WS(" ", p.titulo_cortesia, p.nombre, p.primer_apellido, p.segundo_Apellido) FROM personas p WHERE id = NEW.empleado_id);
    else
        SET v_nombre_empleado= "Sin empleado asignado";
    end if;

    -- Insertar en la bitacora
    INSERT INTO bitacora VALUES(
        DEFAULT,
        USER(),
        "Create",
        "dietas_usuarios",
        CONCAT_WS(" ","Se ha insertado una nueva relación DIETA USUARIO con el ID: ",NEW.dieta_usuario_id, 
        "con los siguientes datos: ",
        "DESCRIPCION = ", NEw.descripcion,
        "EMPLEADO ID = ", v_nombre_empleado,
        "ESTATUS = ", NEW.estatus,
        "PORCENTAJE AVANCE =", NEW.porcentaje_avance),
        NOW(),
        DEFAULT
    );
END

'''),

    migrations.RunSQL('''
    CREATE DEFINER=root@localhost TRIGGER seguimientos_dietas_usuarios_AFTER_UPDATE AFTER UPDATE ON seguimientos_dietas_usuarios FOR EACH ROW BEGIN
	-- Declaración de variables
    DECLARE v_nombre_empleado varchar(60) default null;
    DECLARE v_nombre_empleado2 varchar(60) default null;

    if new.empleado_id is not null then
        -- En caso de tener el id del empleado responsable debemos recuperar su nombre
        set v_nombre_empleado = (SELECT CONCAT_WS(" ", p.titulo_cortesia, p.nombre, p.primer_apellido, p.segundo_Apellido) FROM personas p WHERE id = NEW.empleado_id);
    else
        SET v_nombre_empleado= "Sin empleado asignado";
    end if;
    
    if new.empleado_id is not null then
        -- En caso de tener el id del empleado responsable debemos recuperar su nombre
        set v_nombre_empleado2 = (SELECT CONCAT_WS(" ", p.titulo_cortesia, p.nombre, p.primer_apellido, p.segundo_Apellido) FROM personas p WHERE id = NEW.empleado_id);
    else
        SET v_nombre_empleado2 = "Sin empleado asignado";
    end if;

    -- Insertar en la bitacora
    INSERT INTO bitacora VALUES(
        DEFAULT,
        USER(),
        "Update",
        "seguimientos_dietas_usuarios",
       CONCAT_WS(" ","Se han actualizado los datos de la DIETA con el ID:",NEW.dieta_usuario_id,
        "con los siguientes datos: ",
        "DESCRIPCION = ",OLD. NEw.descripcion, "cambio a ", NEW.descripcion,
        "EMPLEADO ID = ", v_nombre_empleado,
        "ESTATUS = ", NEW.estatus, "cambio a ", NEW.estatus,
        "PORCENTAJE AVANCE =", NEW.porcentaje_avance), "cambio a ", NEW.porcentaje_avance,
        NOW(),
        DEFAULT
    );
END

'''),

    migrations.RunSQL('''
    CREATE DEFINER=root@localhost TRIGGER seguimientos_dietas_usuarios_AFTER_DELETE AFTER DELETE ON seguimientos_dietas_usuarios FOR EACH ROW BEGIN
	INSERT INTO bitacora VALUES(
		DEFAULT,
        USER(),
        "Delete",
        "seguimientos_dietas_usuarios",
        CONCAT_WS(" ","Se ha eliminado la relación SEGUIMIENTOS_DIETAS_USUARIOS con el ID: ", OLD.dieta_usuario_id),
        now(),
        DEFAULT
    );
END

'''),

    migrations.RunSQL('''
    CREATE DEFINER=root@localhost TRIGGER valoraciones_nutricionales_AFTER_INSERT AFTER INSERT ON valoraciones_nutricionales FOR EACH ROW BEGIN
	-- Declaración de variables
    DECLARE v_nombre_usuario varchar(60) default null;
    DECLARE v_nombre_responsable varchar(60) default null;

    -- Iniciación de las variables
    if new.empleado_id is not null then
        -- En caso de tener el id de la sucursal debemos recuperar su nombre
        set v_nombre_usuario = (SELECT CONCAT_WS(" ", p.titulo_cortesia, p.nombre, p.primer_apellido, p.segundo_Apellido) FROM personas p WHERE id = NEW.usuario_id);
    else
        SET v_nombre_usuario = "Sin usuario asignado";
    end if;
    
    if new.empleado_id is not null then
        -- En caso de tener el id del empleado responsable debemos recuperar su nombre
        set v_nombre_responsable = (SELECT CONCAT_WS(" ", p.titulo_cortesia, p.nombre, p.primer_apellido, p.segundo_Apellido) FROM personas p WHERE id = NEW.empleado_id);
    else
        SET v_nombre_responsable = "Sin empleado asignado";
    end if;

    -- Insertar en la bitacora
    INSERT INTO bitacora VALUES(
        DEFAULT,
        USER(),
        "Create",
        "valoraciones_nutricionales",
        CONCAT_WS(" ","Se ha insertado una nueva VALORACION NUTRICIONAL con el ID: ",NEW.ID, 
        "con los siguientes datos: ",
        "USUARIO ID = ",  v_nombre_usuario,
        "INDICADOR NUTRICIONAL ID = ", NEW.indicador_nutricional_id,
        "VALOR = ", NEW.valor,
        "FECHA DE VALORACIÓN = ", NEW.fecha_valoracion, 
        "EMPLEADO ID = ", v_nombre_responsable,
        "COMENTARIOS = ",NEW.comentarios ),
        NOW(),
        DEFAULT
    );
END

'''),

    migrations.RunSQL('''
    CREATE DEFINER=root@localhost TRIGGER valoraciones_nutricionales_AFTER_UPDATE AFTER UPDATE ON valoraciones_nutricionales FOR EACH ROW BEGIN
	 -- Declaración de variables
    DECLARE v_nombre_responsable VARCHAR(100) DEFAULT NULL;
    DECLARE v_nombre_responsable2 VARCHAR(100) DEFAULT NULL;
    DECLARE v_nombre_usuario VARCHAR(60) DEFAULT NULL;
    DECLARE v_nombre_usuario2 VARCHAR(60) DEFAULT NULL;

    -- Inicialización de las variables
    IF NEW.empleado_id IS NOT NULL THEN 
		-- En caso de tener el id del empleado responsable debemos recuperar su nombre
		-- para ingresarlo en la bitacora.
		SET v_nombre_responsable = (SELECT CONCAT_WS(" ", p.titulo_cortesia, p.nombre, p.primer_apellido,p.segundo_apellido) FROM personas p WHERE id = NEW.empleado_id);
    ELSE
		SET v_nombre_responsable = "Sin empleado asignado.";
    END IF;
    
    IF OLD.empleado_id IS NOT NULL THEN 
		-- En caso de tener el id del empleado responsable debemos recuperar su nombre
		-- para ingresarlo en la bitacora.
		SET v_nombre_responsable2 = (SELECT CONCAT_WS(" ", p.titulo_cortesia, p.nombre, p.primer_apellido,
		p.segundo_apellido) FROM personas p WHERE id = OLD.empleado_id);
    ELSE
		SET v_nombre_responsable2 = "Sin empleado asignado.";
    END IF;

    IF NEW.usuario_id IS NOT NULL THEN 
		-- En caso de tener el id del usuario
		SET v_nombre_usuario = (SELECT nombre FROM sucursales WHERE id = NEW.usuario_id);
    ELSE
		SET v_nombre_usuario = "Sin usuario asignado.";
    END IF;

    IF OLD.usuario_id IS NOT NULL THEN 
		-- En caso de tener el id del usuario debemos recuperar su nombre
		-- para ingresarlo en la bitacora.
		SET v_nombre_usuario2 = (SELECT nombre FROM sucursales WHERE id = OLD.usuario_id);
    ELSE
		SET v_nombre_usuario2 = "Sin usuario asignado.";
    END IF;
    
    INSERT INTO bitacora VALUES(
        DEFAULT,
        USER(),
        "Update",
        "valoraciones_nutricionales",
        CONCAT_WS(" ","Se han actualizado los datos de la VALORACIÓN NUTRICIONAL con el ID: ",
        NEW.ID, "con los siguientes datos:",
        "USUARIO ID =",v_nombre_usuario2," cambio a ", v_nombre_usuario,
        "INDICADOR NUTRICIONAL = ", OLD.indicador_nutricional_id, " cambio a ", NEW.indicador_nutricional_id,
        "VALOR = ", OLD.valor, " cambio a ", NEW.valor,
        "FECHA DE VALORACIÓN = ", OLD.fecha_valoracion, " cambio a ", NEW.fecha_valoracion,
        "EMPLEADO ID = ", v_nombre_responsable2, " cambio a ", v_nombre_responsable,
        "COMENTARIOS = ", OLD.comentarios, " cambio a ", NEW.comentarios),
        NOW(),
        DEFAULT       
    );
END

'''),

    migrations.RunSQL('''
    CREATE DEFINER=root@localhost TRIGGER valoraciones_nutricionales_AFTER_DELETE AFTER DELETE ON valoraciones_nutricionales FOR EACH ROW BEGIN
	INSERT INTO bitacora VALUES(
		DEFAULT,
        USER(),
        "Delete",
        "valoraciones_nutricionales",
        CONCAT_WS(" ","Se ha eliminado la VALORACIÓN NUTRICIONAL con el ID: ", OLD.ID),
        now(),
        DEFAULT
    );
END

'''),

    migrations.RunSQL('''
    CREATE DEFINER=root@localhost TRIGGER preguntas_nutricionales_AFTER_INSERT AFTER INSERT ON preguntas_nutricionales FOR EACH ROW BEGIN
	-- Declaración de variables
    DECLARE v_nombre_usuario varchar(60) default null;
    
    -- Iniciación de las variables
    if new.persona_id is not null then
        -- En caso de tener el id del usuario debemos recuperar su nombre
        set v_nombre_usuario = (SELECT CONCAT_WS(" ", p.titulo_cortesia, p.nombre, p.primer_apellido, p.segundo_Apellido) FROM personas p WHERE id = NEW.persona_id);
    else
        SET v_nombre_usuario = "Sin usuario asignado";
    end if;
    
    INSERT INTO bitacora VALUES(
		DEFAULT,
        USER(),
        "Create",
        "preguntas_nutricionales",
        CONCAT_WS(" ","Se ha insertado una nueva Pregunta Nutricional con el ID: ",NEW.persona_ID, 
        "con los siguientes datos:  PERSONA EVALUADA  = ", NEW.persona_id,
        "COMIDAS POR DIA=", NEW.comidas_x_dia,
        "VARIEDAD DE COMIDAS = ", NEW.variedad_comidas,
        "REGULARIDAD DE CARNOHIDRATOS = ", NEW.regularidad_carbohidratos,
        "GRASA EN GRAMOS = ",  NEW.grasa_g,
        "CALORIAS CONSUMIDAS = ", NEW.calorias_consumidas),
        NOW(),
        DEFAULT
    );
END

'''),

    migrations.RunSQL('''
    CREATE DEFINER=root@localhost TRIGGER preguntas_nutricionales_AFTER_UPDATE AFTER UPDATE ON preguntas_nutricionales FOR EACH ROW BEGIN
	 -- Declaración de variables
    DECLARE v_nombre_usuario VARCHAR(60) DEFAULT NULL;
    DECLARE v_nombre_usuario2 VARCHAR(60) DEFAULT NULL;

    -- Inicialización de las variables
    IF NEW.persona_id IS NOT NULL THEN 
		-- En caso de tener el id del usuario debemos recuperar su nombre
		-- para ingresarlo en la bitacora.
		SET v_nombre_usuario = (SELECT CONCAT_WS(" ", p.titulo_cortesia, p.nombre, p.primer_apellido,p.segundo_apellido) FROM personas p WHERE id = NEW.persona_id);
    ELSE
		SET v_nombre_usuario = "Sin persona asignada.";
    END IF;
    
    IF OLD.persona_id IS NOT NULL THEN 
		-- En caso de tener el id del usuario debemos recuperar su nombre
		-- para ingresarlo en la bitacora.
		SET v_nombre_usuario2 = (SELECT CONCAT_WS(" ", p.titulo_cortesia, p.nombre, p.primer_apellido,
		p.segundo_apellido) FROM personas p WHERE id = OLD.persona_id);
    ELSE
		SET v_nombre_usuario2 = "Sin persona asignada.";
    END IF;
    
    INSERT INTO bitacora VALUES(
        DEFAULT,
        USER(),
        "Update",
        "preguntas_nutricionales",
        CONCAT_WS(" ","Se han actualizado los datos de la PREGUNTA NUTRICIONAL con el ID: ",
        NEW.persona_ID, "con los siguientes datos:",
        "PERSONA ID =",v_nombre_usuario2," cambio a ", v_nombre_usuario,
        "COMIDAS POR DIA = ", OLD.comidas_x_dia, " cambio a ", NEW.comidas_x_dia,
        "VARIEDAD DE COMIDAS = ", OLD.variedad_comidas, " cambio a ", NEW.variedad_comidas,
        "REGULARIDAD DE CARBOHIDRATOS = ", OLD.regularidad_carbohidratos, " cambio a ", NEW.regularidad_carbohidratos,
        "GRASA EN G. = ", OLD.grasa_g, " cambio a ", NEW.grasa_g,
        "CALORIAS CONSUMIDAS = ", OLD.calorias_consumidas, " cambio a ", NEW.calorias_consumidas),
        NOW(),
        DEFAULT       
    );
END

'''),

    migrations.RunSQL('''
    CREATE DEFINER=root@localhost TRIGGER preguntas_nutricionales_AFTER_DELETE AFTER DELETE ON preguntas_nutricionales FOR EACH ROW BEGIN
	INSERT INTO bitacora VALUES(
		DEFAULT,
        USER(),
        "Delete",
        "preguntas_nutricionales",
        CONCAT_WS(" ","Se ha eliminado una AREA con el ID: ", OLD.persona_ID),
        now(),
        DEFAULT
    );
END

''')
    ]

